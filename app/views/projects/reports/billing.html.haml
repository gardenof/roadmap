- sorted_data = @accepted_features_by_month.values.sort
%p Showing #{sorted_data.count} months of #{@project.name.capitalize}

= form_tag project_billing_path, :method => :get do
  %p
    %b Period Beginning:
    = text_field_tag :period_start, url_date(@period_start), class: 'datepicker'

  %p
    %b Period Ending:
    = text_field_tag :period_end, url_date(@period_end), class: 'datepicker'
    = submit_tag 'Change Date'

%p
  View
  = link_to "Billing Detail", project_billing_detail_path(@project, period_start: params[:period_start], period_end: params[:period_end])
%table.flipstone-chart{chart_options('data-chart-is_stacked' => 'true')}
  %thead
    %tr
      %th Month
      - sorted_data.each do |month|
        %th= month.label

  %tbody
    %tr
      %th Features
      - sorted_data.each do |month|
        %td= month.total_estimate
    %tr
      %th Bugs
      - sorted_data.each do |month|
        %td= month.bug_types.count * Feature::BugCost
    %tr
      %th Chores
      - sorted_data.each do |month|
        %td= month.chore_types.count * Feature::ChoreCost

%table.billing
  %tr
    %th.month Points
    %th Total
    %th Features
    %th Bugs
    %th Chores
  - sorted_data.reverse.each do |month_set|
    %tr
      %td
        - period_month = @accepted_features_by_month.key(month_set)
        - p_begin = period_month.beginning_of_month
        - p_end = period_month.end_of_month
        =link_to month_set.label, project_billing_detail_path(@project, period_begin: url_date(p_begin), period_end: url_date(p_end))

      %td= month_set.total_cost
      %td= month_set.feature_cost
      %td= month_set.bug_cost
      %td= month_set.chore_cost

:javascript
  $(function() {
    $( ".datepicker" ).datepicker({ dateFormat: 'yy-mm-dd' });
  });
