- set = FeatureSet.new(@features)
- label = params[:value] || ''
%h1 Showing #{@features.count} #{label} features

= flash[:notice]

%table
  %tr
    %th By Estimate
    %th Count
    %th Estimate
    %th Avg
  %tr
    %td Estimated
    %td #{@features.count - set.unestimated_count}
    %td #{set.total_estimate} pts
    %td #{format_float(set.average_estimated_size)} pts
  %tr
    %td Unestimated
    %td #{set.unestimated_count}
    %td -
    %td -

%table
  %tr
    %th By Status
    %th Count
    %th Estimate
    %th Avg
  - [:unscheduled, :unstarted, :started, :accepted].each do |st|
    %tr
      %td= st.capitalize
      %td= set.count_in_state(st)
      %td #{set.total_in_state(st)} pts
      %td -

= will_paginate @features

%table
  %tr
    %th Type
    %th Name
    %th Estimate
    %th Labels
    %th Status
    %th{colspan:3} Actions

  - @features.each do |feature|
    %tr
      %td= feature.story_type
      %td= feature.name
      %td= feature.estimate
      %td
        - feature.labels.each do |tag|
          = link_to tag, tagged_project_features_path(feature.project,value: tag)
      %td= feature.current_state
      - if feature.refreshed_at.present?
        %td{colspan: 3}
          = link_to 'Show', project_feature_path(feature.project,feature)
      - else
        %td= link_to 'Show', project_feature_path(feature.project,feature)
        %td= link_to 'Edit', edit_project_feature_path(@project,feature)

%br
= link_to 'New Feature', new_project_feature_path(@project)

